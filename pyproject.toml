[build-system]
build-backend = "scikit_build_core.build"
requires = [
    "scikit-build-core >=0.9.3",
    "nanobind >=2.7",
    "pcpp",

    # stubgen uses @override :/
    "typing_extensions>=4.5",
]

[project]
name = "islpy"
version = "2025.2.2"
description = "Wrapper around isl, an integer set library"
readme = "README.rst"
license = "MIT"
authors = [
    { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
requires-python = "~=3.10"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Other Audience",
  "Intended Audience :: Science/Research",
  "Programming Language :: C++",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Software Development :: Libraries",
]

[project.urls]
Documentation = "https://documen.tician.de/islpy"
Repository = "https://github.com/inducer/islpy"


[dependency-groups]
dev = [
    "pytest>=2",
]

[tool.inducer-ci-support]
disable-editable-pip-install = true

[tool.scikit-build]
sdist.exclude = [
    ".github",
    "run-*.sh",
]

# FIXME: Comment out before committing
# Use with --no-build-isolation for fast development builds
# build-dir = "build/{wheel_tag}"

[tool.ruff]
preview = true
exclude = [
    "isl",
    "aksetup_helper.py"
]
target-version = "py310"


[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "G",   # flake8-logging-format
    "I",   # flake8-isort
    "N",   # pep8-naming
    "NPY", # numpy
    "Q",   # flake8-quotes
    "UP",  # pyupgrade
    "RUF", # ruff
    "W",   # pycodestyle
    "TC",
]
extend-ignore = [
    "C90",  # McCabe complexity
    "E221", # multiple spaces before operator
    "E226", # missing whitespace around arithmetic operator
    "E402", # module-level import not at top of file
    "UP031", # use f-strings instead of %
    "UP032", # use f-strings instead of .format
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-local-folder = [
    "islpy",
]
lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
"islpy/*.pyi" = [
    "N801", "N802", "E501", "I001", "F401", "E202", "E203", "Q000",
    "RUF012"
]

[tool.cibuildwheel]
# nanobind does not support Py<3.8
# i686 does not have enough memory for LTO to complete
skip = ["pp*", "cp3[6789]-*", "*_i686"]

test-requires = "pytest"
test-command = "pytest {project}/test"

[tool.cibuildwheel.macos.environment]
# Needed for full C++17 support
MACOSX_DEPLOYMENT_TARGET = "10.14"


[tool.basedpyright]
reportImplicitStringConcatenation = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportExplicitAny = "none"
reportUnreachable = "none"

# This reports even cycles that are qualified by 'if TYPE_CHECKING'. Not what
# we care about at this moment.
# https://github.com/microsoft/pyright/issues/746
reportImportCycles = "none"
pythonVersion = "3.10"
pythonPlatform = "All"

[[tool.basedpyright.executionEnvironments]]
root = "islpy/_monkeypatch.py"
reportUnknownArgumentType = "hint"
reportAttributeAccessIssue = "none"
reportPrivateUsage = "none"

[[tool.basedpyright.executionEnvironments]]
root = "islpy/_isl.pyi"
reportUnannotatedClassAttribute = "none"
reportImplicitOverride = "none"

