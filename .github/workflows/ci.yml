name: CI
on:
    push:
        branches:
        - main
    pull_request:
    schedule:
        - cron:  '17 3 * * 0'

jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                # matches compat target in setup.py
                python-version: '3.6'
        -   name: "Main Script"
            run: |
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/main/prepare-and-run-flake8.sh
                . ./prepare-and-run-flake8.sh "$(basename $GITHUB_REPOSITORY)" test gen_wrap.py examples

    pytest:
        name: Pytest Linux on Py${{ matrix.python-version }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.6, 3.8, "3.x"]
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: ${{ matrix.python-version }}
        -   name: "Main Script"
            run: |
                EXTRA_INSTALL="numpy"
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
                . ./build-and-test-py-project.sh

    examples:
        name: Examples Linux on Py${{ matrix.python-version }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.6, 3.8, "3.x"]
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: ${{ matrix.python-version }}
        -   name: "Main Script"
            run: |
                EXTRA_INSTALL="matplotlib numpy"
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/main/ci-support.sh
                . ./ci-support.sh
                build_py_project_in_venv
                run_examples

    pytest_mac:
        name: Pytest macOS
        runs-on: macos-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/main/build-and-test-py-project.sh
                . ./build-and-test-py-project.sh

    docs:
        name: Documentation
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: '3.x'
        -   name: "Main Script"
            run: |
                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/main/ci-support.sh
                . ci-support.sh
                build_py_project_in_venv
                # https://github.com/sphinx-doc/sphinx/issues/9200
                CI_SUPPORT_SPHINX_VERSION_SPECIFIER="!=4.0.0"
                build_docs

    downstream_tests:
        strategy:
            matrix:
                downstream_project: [loopy]
        name: Tests for downstream project ${{ matrix.downstream_project }}
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: "Main Script"
            env:
                DOWNSTREAM_PROJECT: ${{ matrix.downstream_project }}
            run: |
                git clone "https://github.com/inducer/$DOWNSTREAM_PROJECT.git"
                cd "$DOWNSTREAM_PROJECT"
                echo "*** $DOWNSTREAM_PROJECT version: $(git rev-parse --short HEAD)"

                sed -i "/egg=islpy/ c git+file://$(readlink -f ..)#egg=islpy" requirements.txt
                sed -i '/islpy/ d' .test-conda-env-py3.yml

                export CONDA_ENVIRONMENT=.test-conda-env-py3.yml

                # Avoid slow or complicated tests in downstream projects
                export PYTEST_ADDOPTS="-k 'not (slowtest or octave or mpi)'"

                curl -L -O -k https://gitlab.tiker.net/inducer/ci-support/raw/main/ci-support.sh
                . ./ci-support.sh
                build_py_project_in_conda_env
                test_py_project

    barvinok:
        name: "Test barvinok build script"
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                python-version: "3.x"
        -   name: "Main Script"
            run: |
                python3 -m venv .env
                source .env/bin/activate
                python -m ensurepip
                pip install pcpp pytest numpy
                ./build-with-barvinok.sh "$HOME/barvinok-build"
                (cd test; LD_LIBRARY_PATH="$HOME/barvinok-build/lib" python -m pytest --tb=native -rxsw)

# vim: sw=4
