name: Build wheels
on:
  push:
    branches:
      - master
  create:
    tags:
      - v*
jobs:
  build:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.6, 3.7, 3.8, 3.9]
        arch: [x86_64, i686]
        os: [ubuntu-latest, macos-latest]
        exclude:
          - os: macos-latest
            arch: i686

    steps:
    - uses: actions/checkout@v2
    - name: Build, install and test
      run: |
        if [[ "$(uname)" == "Linux" ]]; then
          TRAVIS_OS_NAME="linux"
        else
          TRAVIS_OS_NAME="osx"
        fi
        export MB_PYTHON_OSX_VER=10.9
        git submodule update --init --recursive
        CONFIG_PATH=wheels/config.sh
        (cd wheels; git clone https://github.com/matthew-brett/multibuild)
        source wheels/multibuild/common_utils.sh
        source wheels/multibuild/travis_steps.sh
        if [[ "$(uname)" == "Darwin" ]]; then
          python3 -m pip install virtualenv
          before_install
        fi
        build_wheel . $PLAT
        install_run $PLAT
        mkdir dist
        cp wheelhouse/* dist/
      env:
        PLAT: ${{ matrix.arch }}
        MB_PYTHON_VERSION: ${{ matrix.python_version }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
      if: startsWith(github.ref, 'refs/tags/')

    - name: Publish package to PyPI
      run: |
        python3 -m pip install twine
        python3 -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      if: startsWith(github.ref, 'refs/tags')
